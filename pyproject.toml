[tool.poetry]
name = "django-boilerplate"
version = "0.1.0"
description = "Django boilerplate to use as a fast starter point"
authors = ["Alex <alopezariguel@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "config"}]

[tool.poetry.dependencies]
python = "^3.12.10"
django = "5.2.7"
psycopg2-binary = "^2.9.11"
djangorestframework = "^3.16.1"
django-redis = "^6.0.0"
redis = "^7.0.1"
celery = "^5.5.2"
django-celery-beat = "^2.8.1"
django-celery-results = "^2.6.0"
flower = "^2.0.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.14.2"
pytest = "^8.4.2"
pytest-django = "^4.11.1"
factory-boy = "^3.3.3"
pytest-xdist = "^3.7.0"

ty = "^0.0.1a24"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 100
exclude = ["**/migrations/**", "scripts/*"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]

[tool.pytest.ini_options]
addopts = "--nomigrations --ds=config.settings.test"
python_files = "test_*.py tests.py"
pythonpath = [".", "src"]
